DELIMITER //
CREATE PROCEDURE insert_customer(
    IN p_customer_type ENUM('individual', 'organization'),
    IN p_address VARCHAR(150),
    IN p_phone_number VARCHAR(15),
    IN p_email VARCHAR(45),
    IN p_first_name VARCHAR(15),
    IN p_last_name VARCHAR(15),
    IN p_nic VARCHAR(13),
    IN p_dob DATE,
    IN p_pw_hash VARCHAR(255),
    IN p_name VARCHAR(15),
    IN p_org_reg_no VARCHAR(15),
     -- New parameter for password hash
    OUT p_out_status INT
)
BEGIN

    -- Declare a variable to store an error flag
    DECLARE error_flag INT DEFAULT 0;

    -- Declare a variable to store the customer ID
    DECLARE customer_id BIGINT;

    -- Use a handler to capture any errors that occur within the transaction
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET error_flag = 1;

    -- Disable auto-commit
    SET autocommit = 0;

    -- Start the transaction
    START TRANSACTION;

    -- Insert customer information into the 'customer' table
    INSERT INTO customer (customer_type, address, phone_number,  email)
    VALUES (p_customer_type, p_address, p_phone_number,  p_email);   /*p_nic_image,nic_image removed*/

    -- Get the last auto-generated customer ID from the previous INSERT operation
    SET customer_id = LAST_INSERT_ID();

    -- Insert individual-specific information into the 'individual' table if p_customer_type is 'individual'
    IF p_customer_type = 'individual' THEN
        INSERT INTO individual (individual_id, first_name, last_name, nic, dob)
        VALUES (customer_id, p_first_name, p_last_name, p_nic, p_dob);
    -- Insert organization-specific information into the 'organization' table if p_customer_type is 'organization'
    ELSE
        IF p_customer_type = 'organization' THEN
        INSERT INTO organization (organization_id, name, organization_reg_no)
        VALUES (customer_id, p_name, p_org_reg_no);
        END IF;
    END IF;

    -- Insert customer credentials into the 'customer_credentials' table
    INSERT INTO customer_credentials (email, pw_hash)
    VALUES (p_email, p_pw_hash);

    -- Check if there was an error
    IF error_flag = 1 THEN
        -- An error occurred, so rollback the transaction
        ROLLBACK;
        SET p_out_status =1;
    ELSE
        -- No error occurred, so commit the transaction
        COMMIT;
        SET p_out_status =0;
    END IF;

    -- Enable auto-commit
    SET autocommit = 1;

    -- Set the generated customer ID in the output parameter
    /*SET p_generated_id = customer_id;*/

END;
//
DELIMITER ;
