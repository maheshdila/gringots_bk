CREATE TABLE IF NOT EXISTS `customer` (
  `customer_id` BIGINT AUTO_INCREMENT,
  `customer_type` enum('individual','organization') NOT NULL ,
  `address` varchar(150),
  `phone_number` varchar(15),
  `email` VARCHAR(45) UNIQUE NOT NULL,
  PRIMARY KEY (`customer_id`)
);
CREATE INDEX idx_email ON customer (email);


CREATE TABLE IF NOT EXISTS `individual` (
  `individual_id` BIGINT,
  `first_name` varchar(15),
  `last_name` varchar(15),
  `nic` varchar(13) UNIQUE NOT
      NULL,
  `dob` date,
  PRIMARY KEY (`individual_id`),
  FOREIGN KEY (`individual_id`) REFERENCES customer(customer_id)
);
/*index for nic*/
CREATE INDEX idx_nic ON individual (nic);



CREATE TABLE IF NOT EXISTS `organization` (
  `organization_id` BIGINT,
  `name` varchar(15),
  `organization_reg_no` varchar(15) UNIQUE NOT NULL,
  PRIMARY KEY (`organization_id`),
  FOREIGN KEY (`organization_id`) REFERENCES customer(`customer_id`)
);
CREATE INDEX idx_org_reg_no ON organization (organization_reg_no);


CREATE TABLE IF NOT EXISTS `customer_credentials` (
  `email` VARCHAR(45),
  `pw_hash` VARCHAR(255),
  PRIMARY KEY (`email`),
  FOREIGN KEY (`email`) REFERENCES customer(`email`)
);


CREATE TABLE `Branch` (
  `branch_id` BIGINT AUTO_INCREMENT,
  `branch_name` varchar(15),
  `address` varchar(150),
  `telephone` int,
  `manager` varchar(10),
  `opening_hours` varchar(15),
  PRIMARY KEY (`branch_id`)
);

CREATE TABLE `Employee` (
  `employee_id` BIGINT AUTO_INCREMENT,
  `branch_id` BIGINT,
  `first_name` varchar(15),
  `last_name` varchar(15),
  `nic` varchar(12) UNIQUE NOT NULL,
  `date_of_birth` date,
  `address` varchar(70),
  `employee_type` enum('manager','ordinary') NOT NULL ,
  PRIMARY KEY (`employee_id`),
  FOREIGN KEY (`branch_id`) REFERENCES `Branch`(`branch_id`)
);

CREATE INDEX idx_nic ON employee(nic);


CREATE TABLE IF NOT EXISTS `employee_credentials` (
  `nic` VARCHAR(13),
  `pw_hash` VARCHAR(255),
  PRIMARY KEY (`nic`),
  FOREIGN KEY (`nic`) REFERENCES employee(`nic`)
);


CREATE TABLE `Account` (
  `account_no` BIGINT AUTO_INCREMENT,
  `customer_id` BIGINT,
  `branch_id` BIGINT,
  `account_type` ENUM('saving','checking'),
  `balance` Numeric(20,2),
  PRIMARY KEY (`account_no`),
  FOREIGN KEY (`customer_id`) REFERENCES `customer`(`customer_id`),
  FOREIGN KEY (`branch_id`) REFERENCES `Branch`(`branch_id`)
)AUTO_INCREMENT = 10000000000; -- 11 figure account number

CREATE TABLE `Saving_account_Interest_rate` (
  `account_type` enum('children', 'teen', 'adult', 'senior'),
  `minimum_value` NUMERIC(15,2),
  `rate` NUMERIC(4,2),
  PRIMARY KEY (`account_type`)
);

CREATE TABLE `Fixed_deposit_Interest_rate` (
  `account_type` enum('fd_6m','fd_1y','fd_3y'),
  `rate` NUMERIC(4,2),
  PRIMARY KEY (`account_type`)
);

CREATE TABLE `Checking_account` (
  `checking_account_no` BIGINT,
  PRIMARY KEY (`checking_account_no`),
  FOREIGN KEY (`checking_account_no`) REFERENCES `Account`(account_no)
);

CREATE TABLE `Saving_account` (
  `saving_acc_no` BIGINT,
  `s_account_type` enum('children', 'teen', 'adult', 'senior'),
  `num_of_withdrawals` INT,
  PRIMARY KEY (`saving_acc_no`),
  FOREIGN KEY (`s_account_type`) REFERENCES `Saving_account_Interest_rate`(`account_type`)
);


CREATE TABLE `Transaction` (
  `transaction_id` BIGINT AUTO_INCREMENT,
  `sender_account_id` BIGINT,
  `receiver_account_id` BIGINT,
  `amount` NUMERIC(20,2) NOT NULL,
  `date` date,
  `time` time,
  PRIMARY KEY (`transaction_id`),
  FOREIGN KEY(`sender_account_id`) REFERENCES account(account_no),
  FOREIGN KEY(`receiver_account_id`) REFERENCES account(account_no)
);

CREATE TABLE `Deposit` (
  `Deposit_id` BIGINT AUTO_INCREMENT,
  `Account_id` BIGINT,
  `Date` date NOT NULL,
  `Time` time NOT NULL,
  `Amount` NUMERIC(20,2) NOT NULL ,
  PRIMARY KEY (`Deposit_id`),
  FOREIGN KEY (`Account_id`) REFERENCES account(account_no)
);

CREATE TABLE `Withdrawal` (
  `withdrawal_id` BIGINT AUTO_INCREMENT,
  `account_id` BIGINT,
  `date` date,
  `time` time,
  `amount` NUMERIC(20,2),
  PRIMARY KEY (`withdrawal_id`),
  FOREIGN KEY (`Account_id`) REFERENCES account(account_no)
);

CREATE TABLE `loan_info` (
  `loan_id` BIGINT,
  `customer_id` BIGINT,
  `branch_id` BIGINT,
  `saving_account` BIGINT,
  `loan_type` enum('online','physical'),
  `settlement_period` INT,--
  `amount` NUMERIC(15,2),
  `approval_status` enum('approved','disapproved','pending'),
  `approved_date` DATE,
  `completed_installments` INT,
  `late_installments` INT,
  `total_installments` INT,
  PRIMARY KEY (`loan_id`),
  FOREIGN KEY (`saving_account`) REFERENCES `Saving_account`(`saving_acc_no`),
  FOREIGN KEY (`customer_id`) REFERENCES `customer`(`customer_id`)
);


